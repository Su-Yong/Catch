!function(e){var t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=15)}([function(e,t){e.exports={BASE:"base",STACK:"stack"}},function(e,t){e.exports={LOGIN:"login",JOIN:"join",MAP_SYNC:"map_sync"}},function(e,t){e.exports=class{constructor(){this.canvas,this.ctx,this.data}init(e){this.canvas=e,this.ctx=this.canvas.getContext("2d")}update(e){this.data=e}render(){}}},function(e,t){e.exports=class{constructor(){this.keyDownListener=(e=>{}),this.keyUpListener=(e=>{}),this.mouseDownListener=(e=>{}),this.mouseUpListener=(e=>{}),this.mouseMoveListener=(e=>{}),this.mouseWheelListener=(e=>{})}setKeyDownListener(e){this.keyDownListener=e}setkeyUpListener(e){this.keyUpListener=e}setMouseDownListener(e){this.mouseDownListener=e}setMouseMoveListener(e){this.mouseMoveListener=e}setMouseUpListener(e){this.mouseUpListener=e}setMouseWheelListener(e){this.mouseWheelListener=e}}},function(e,t,s){const n=s(0),i=s(3);e.exports=class{constructor(e,t=n.STACK,s="",r=new i){this.name=e,this.type=t,this.html=s,this.inputBinder=r,this.data}init(){}syncData(e){this.data=e}}},function(e,t,s){const n=s(4),i=s(0),r='<div style=""><div class="input-provider" style="width: 30vw; "><input id="name" style="font-size: 20px; width: calc(30vw - 48px)"></input><div id="register" class="flat-button" style="float: right;">GO</div></div></div>';e.exports=class extends n{constructor(){super("main",i.BASE,r)}init(){const e=document.getElementById("register"),t=document.getElementById("name");e.addEventListener("click",()=>{const e=t.value;Client.screenManager.pushScreen("game",{name:e}),Client.screenManager.getNowScreen().prepare()})}}},function(e,t){const s={N:1,E:2,W:4,S:8};e.exports=class{constructor(e=10,t=10){this.width=e,this.height=t,this.players=[],this.maze=[],this.bombs=[]}generateMaze(){for(let e=0;e<=2*this.height;e++){this.maze[e]=[];for(let t=0;t<=2*this.width;t++)this.maze[e][t]=2}const e=(t,n)=>{if(2!==this.maze[2*t][2*n])return;const i=Math.ceil(15*Math.random());n<this.height&&(i&s.N?(e(t,n+1),this.maze[2*t][2*n+1]=0):this.maze[2*t][2*n+1]=1),t<this.width&&(i&s.E?(e(t+1,n),this.maze[2*t+1][2*n]=0):this.maze[2*t+1][2*n]=1),t>0&&(i&s.W?(e(t-1,n),this.maze[2*t-1][2*n]=0):this.maze[2*t-1][2*n]=1),n>0&&(i&s.S?(e(t,n-1),this.maze[2*t][2*n-1]=0):this.maze[2*t][2*n-1]=1),this.maze[2*t][2*n]=0},t=Math.floor(Math.random()*this.width),n=Math.floor(Math.random()*this.height);e(t,n),this.maze=this.maze.map(e=>e=e.map(e=>e>0?1:0)),console.log(this.maze)}}},function(e,t,s){const n=s(4),i=s(0),r=s(3),o=s(2),c=s(6);e.exports=class extends n{constructor(){const e=new r;e.setKeyDownListener(e=>{String.fromCharCode(e.keyCode)}),super("game",i.BASE,e),this.renderManager=new o,this.game=new c}init(){this.renderManager.init(document.getElementById("canvas"))}prepare(){this.game.generateMaze()}start(){this.run=(()=>{this.renderManager.render(),requestAnimationFrame(this.run)}),requestAnimationFrame(this.run)}}},function(e,t,s){const n=s(0);e.exports=class{constructor(){this.screens=[],this.screenStack=[],this._element=null}init(){this._element=document.getElementById("screen-provider")}getAllScreens(){return this.screens}register(e){this.screens.push(e)}pushScreen(e,t){for(const s of this.screens)s.name===e&&(s.type===n.BASE?this.screenStack=[s]:this.screenStack.push(s),this._element.innerHTML=s.html,s.syncData(t),s.init())}popScreen(e){for(const t of this.screens)t.name===e&&t.type===n.STACK&&(this.screenStack.pop(t),this._element=this.screenStack[this.screenStack-1].html)}getNowScreen(){return this.screenStack[this.screenStack.length-1]}}},function(e,t,s){const n=s(1);e.exports=class{constructor(e){this.socket=e,this.socket.on(n.MAP_SYNC,e=>{})}register(e){this.socket.emit(n.LOGIN,{name:e})}}},function(e,t,s){const n=s(1);e.exports=class{constructor(e){this.socket=e}join(e){this.socket.emit(n.JOIN,e)}}},function(e,t,s){const n=s(1);e.exports=class{constructor(e){this.socket=e}register(e){console.log("register"+e),this.socket.emit(n.LOGIN,{name:e})}}},function(e,t,s){const n=s(11),i=s(10),r=s(9);e.exports=class{constructor(e){this.socketServer=e,this.loginManager=new n(this.socketServer),this.playerJoinManager=new i(this.socketServer),this.gameStateManager=new r(this.socketServer)}}},function(e,t,s){const n=s(12),i=s(8),r=s(7),o=s(5),c=s(2);e.exports=class{constructor(){this.networkManager=new n(io()),this.screenManager=new i,this.renderManager=new c}init(){this.screenManager.init(),this.screenManager.register(new o),this.screenManager.register(new r),this.screenManager.pushScreen("main")}}},function(e,t){var s;s=function(){return this}();try{s=s||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(s=window)}e.exports=s},function(e,t,s){(function(e){const t=s(13);e.Client=new t,window.onload=(()=>{Client.init()})}).call(this,s(14))}]);